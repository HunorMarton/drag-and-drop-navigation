{"version":3,"sources":["../src/index.ts","../src/page-navigation.tsx","../src/page-tab.tsx","../src/add-page-space.tsx","../src/rename-dialog.tsx","../src/drag-overlay.tsx","../src/hooks/use-page-navigation-internal.ts"],"sourcesContent":["// Main component\nexport { default as PageNavigation } from \"./page-navigation\";\n\n// Types\nexport type {\n  Page,\n  PageNavigationCallbacks,\n  RenameDialogState,\n} from \"./types/page\";\n","\"use client\";\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\n\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n  type DragEndEvent,\n  type DragStartEvent,\n} from \"@dnd-kit/core\";\nimport {\n  SortableContext,\n  sortableKeyboardCoordinates,\n  horizontalListSortingStrategy,\n} from \"@dnd-kit/sortable\";\nimport { Plus } from \"lucide-react\";\nimport { Button } from \"@workspace/ui\";\nimport { PageTab } from \"./page-tab\";\nimport { AddPageSpace } from \"./add-page-space\";\nimport { RenameDialog } from \"./rename-dialog\";\nimport { DragOverlay } from \"./drag-overlay\";\nimport { usePageNavigationInternal } from \"./hooks/use-page-navigation-internal\";\nimport type { Page, PageNavigationCallbacks } from \"./types/page\";\n\ninterface PageNavigationProps extends PageNavigationCallbacks {\n  pages: Page[];\n}\n\nexport default function PageNavigation({\n  pages,\n  onPageSelect,\n  onPageAdd,\n  onPageReorder,\n  onPageRename,\n  onPageDelete,\n  onPageDuplicate,\n}: PageNavigationProps) {\n  const [hoveredSpaceId, setHoveredSpaceId] = useState<string | null>(null);\n\n  const callbacks: PageNavigationCallbacks = {\n    onPageSelect,\n    onPageAdd,\n    onPageReorder,\n    onPageRename,\n    onPageDelete,\n    onPageDuplicate,\n  };\n\n  const {\n    activeId,\n    setActiveId,\n    renameDialog,\n    newPageName,\n    setNewPageName,\n    handleSelectPage,\n    handleRenamePage,\n    handleConfirmRename,\n    handleCancelRename,\n    handleDeletePage,\n    handleDuplicatePage,\n    handleAddPage,\n    handleReorderPages,\n  } = usePageNavigationInternal(callbacks);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        distance: 8,\n      },\n    }),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  const handleDragStart = (event: DragStartEvent) => {\n    setActiveId(event.active.id as string);\n  };\n\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event;\n    setActiveId(null);\n\n    if (!over) return;\n\n    if (active.id !== over.id) {\n      handleReorderPages(active.id as string, over.id as string);\n    }\n  };\n\n  const getPageTransform = (pageIndex: number, pageId: string) => {\n    if (!hoveredSpaceId) return \"\";\n\n    const hoveredIndex = pages.findIndex((page) => page.id === hoveredSpaceId);\n    if (hoveredIndex === -1) return \"\";\n\n    const distance = Math.abs(pageIndex - hoveredIndex);\n    const direction = pageIndex > hoveredIndex ? 1 : -1;\n\n    // Calculate movement: closer pages move more, farther pages move less\n    let movement = 0;\n    if (distance === 1) {\n      movement = 8 * direction; // Adjacent pages move 8px\n    } else if (distance === 2) {\n      movement = 4 * direction; // Next pages move 4px\n    } else if (distance === 3) {\n      movement = 2 * direction; // Further pages move 2px\n    }\n\n    return `translateX(${movement}px)`;\n  };\n\n  const draggedPage = activeId\n    ? pages.find((page) => page.id === activeId) || null\n    : null;\n\n  return (\n    <div className=\"w-full bg-white border-b border-gray-200 px-6 py-3\">\n      <DndContext\n        sensors={sensors}\n        collisionDetection={closestCenter}\n        onDragStart={handleDragStart}\n        onDragEnd={handleDragEnd}\n      >\n        <div className=\"flex items-center\">\n          <SortableContext\n            items={pages.map((p) => p.id)}\n            strategy={horizontalListSortingStrategy}\n          >\n            <div className=\"flex items-center\">\n              {pages.map((page, index) => (\n                <React.Fragment key={page.id}>\n                  <div\n                    style={{\n                      transform: getPageTransform(index, page.id),\n                      transition: \"transform 300ms ease-out\",\n                    }}\n                  >\n                    <PageTab\n                      page={page}\n                      onSelect={handleSelectPage}\n                      onRename={handleRenamePage}\n                      onDelete={handleDeletePage}\n                      onDuplicate={handleDuplicatePage}\n                      isDragging={!!activeId}\n                    />\n                  </div>\n                  {index < pages.length - 1 && (\n                    <div\n                      onMouseEnter={() => setHoveredSpaceId(page.id)}\n                      onMouseLeave={() => setHoveredSpaceId(null)}\n                      className=\"relative\"\n                    >\n                      <AddPageSpace\n                        afterPageId={page.id}\n                        onAddPage={handleAddPage}\n                        isHovered={hoveredSpaceId === page.id}\n                      />\n                    </div>\n                  )}\n                </React.Fragment>\n              ))}\n            </div>\n          </SortableContext>\n\n          <div className=\"ml-6\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-gray-500 hover:text-gray-700 gap-2\"\n              onClick={() => handleAddPage()}\n            >\n              <Plus className=\"w-4 h-4\" />\n              Add page\n            </Button>\n          </div>\n        </div>\n\n        <DragOverlay draggedPage={draggedPage} />\n      </DndContext>\n\n      <RenameDialog\n        state={renameDialog}\n        newPageName={newPageName}\n        onNewPageNameChange={setNewPageName}\n        onConfirm={handleConfirmRename}\n        onCancel={handleCancelRename}\n      />\n    </div>\n  );\n}\n","\"use client\";\n\nimport * as React from \"react\";\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { Edit2, Trash2, Copy } from \"lucide-react\";\nimport {\n  ContextMenu,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuTrigger,\n} from \"@workspace/ui\";\nimport type { Page } from \"./types/page\";\n\ninterface PageTabProps {\n  page: Page;\n  onSelect: (id: string) => void;\n  onRename: (id: string, newName: string) => void;\n  onDelete: (id: string) => void;\n  onDuplicate: (id: string) => void;\n  isDragging?: boolean;\n}\n\nexport function PageTab({\n  page,\n  onSelect,\n  onRename,\n  onDelete,\n  onDuplicate,\n  isDragging,\n}: PageTabProps) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging: isSortableDragging,\n  } = useSortable({ id: page.id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isSortableDragging ? 0.5 : 1,\n  };\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (!isDragging) {\n      onSelect(page.id);\n    }\n  };\n\n  return (\n    <ContextMenu>\n      <ContextMenuTrigger asChild>\n        <div\n          ref={setNodeRef}\n          style={style}\n          className={`\n            flex items-center gap-2 px-3 py-2 rounded-lg text-sm font-medium cursor-pointer\n            transition-all duration-200 select-none touch-none\n            ${\n              page.isActive\n                ? \"bg-orange-50 text-orange-700 border border-orange-200\"\n                : \"text-gray-600 hover:text-gray-900 hover:bg-gray-50\"\n            }\n            ${isSortableDragging ? \"shadow-lg z-50\" : \"\"}\n          `}\n          onClick={handleClick}\n          {...attributes}\n          {...listeners}\n        >\n          {page.icon}\n          <span>{page.name}</span>\n        </div>\n      </ContextMenuTrigger>\n      <ContextMenuContent>\n        <ContextMenuItem onClick={() => onRename(page.id, page.name)}>\n          <Edit2 className=\"w-4 h-4 mr-2\" />\n          Rename\n        </ContextMenuItem>\n        <ContextMenuItem onClick={() => onDuplicate(page.id)}>\n          <Copy className=\"w-4 h-4 mr-2\" />\n          Duplicate\n        </ContextMenuItem>\n        <ContextMenuItem\n          onClick={() => onDelete(page.id)}\n          className=\"text-red-600 focus:text-red-600\"\n        >\n          <Trash2 className=\"w-4 h-4 mr-2\" />\n          Delete\n        </ContextMenuItem>\n      </ContextMenuContent>\n    </ContextMenu>\n  );\n}\n","\"use client\";\nimport * as React from \"react\";\nimport { Plus } from \"lucide-react\";\nimport { Button } from \"@workspace/ui\";\n\ninterface AddPageSpaceProps {\n  afterPageId: string;\n  onAddPage: (afterId: string) => void;\n  isHovered?: boolean;\n}\n\nexport function AddPageSpace({\n  afterPageId,\n  onAddPage,\n  isHovered = false,\n}: AddPageSpaceProps) {\n  return (\n    <div className=\"relative flex items-center justify-center\">\n      {/* Large invisible hover area for better UX */}\n      <div className=\"absolute w-12 h-10 -mx-6 z-10\" />\n\n      {/* Spacer that expands when hovered */}\n      <div\n        className={`\n          transition-all duration-300 ease-out flex items-center justify-center\n          ${isHovered ? \"w-10\" : \"w-2\"}\n        `}\n      >\n        {/* Add button with smooth appearance */}\n        <div\n          className={`\n            transition-all duration-300 ease-out\n            ${\n              isHovered\n                ? \"opacity-100 scale-100\"\n                : \"opacity-0 scale-75 pointer-events-none\"\n            }\n          `}\n        >\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"h-7 w-7 p-0 rounded-full bg-gray-100 hover:bg-gray-200 border border-gray-300 shadow-sm\"\n            onClick={() => onAddPage(afterPageId)}\n          >\n            <Plus className=\"w-3 h-3\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","\"use client\";\nimport * as React from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n  Button,\n  Label,\n} from \"@workspace/ui\";\nimport { Input } from \"@workspace/ui\";\nimport type { RenameDialogState } from \"./types/page\";\n\ninterface RenameDialogProps {\n  state: RenameDialogState;\n  newPageName: string;\n  onNewPageNameChange: (name: string) => void;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nexport function RenameDialog({\n  state,\n  newPageName,\n  onNewPageNameChange,\n  onConfirm,\n  onCancel,\n}: RenameDialogProps) {\n  return (\n    <Dialog open={state.isOpen} onOpenChange={(open) => !open && onCancel()}>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>Rename Page</DialogTitle>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4\">\n          <div className=\"grid gap-2\">\n            <Label htmlFor=\"page-name\">Page Name</Label>\n            <Input\n              id=\"page-name\"\n              value={newPageName}\n              onChange={(e) => onNewPageNameChange(e.target.value)}\n              onKeyDown={(e) => e.key === \"Enter\" && onConfirm()}\n              autoFocus\n            />\n          </div>\n        </div>\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={onCancel}>\n            Cancel\n          </Button>\n          <Button onClick={onConfirm}>Rename</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","\"use client\";\nimport * as React from \"react\";\nimport { DragOverlay as DndDragOverlay } from \"@dnd-kit/core\";\nimport type { Page } from \"./types/page\";\n\ninterface DragOverlayProps {\n  draggedPage: Page | null;\n}\n\nexport function DragOverlay({ draggedPage }: DragOverlayProps) {\n  return (\n    <DndDragOverlay>\n      {draggedPage && (\n        <div className=\"flex items-center gap-2 px-3 py-2 rounded-lg text-sm font-medium bg-white shadow-lg border border-gray-200\">\n          {draggedPage.icon}\n          <span>{draggedPage.name}</span>\n        </div>\n      )}\n    </DndDragOverlay>\n  );\n}\n","\"use client\"\n\nimport { useState, useCallback } from \"react\"\nimport type { RenameDialogState, PageNavigationCallbacks } from \"../types/page\"\n\nexport function usePageNavigationInternal(callbacks: PageNavigationCallbacks) {\n  const [activeId, setActiveId] = useState<string | null>(null)\n  const [renameDialog, setRenameDialog] = useState<RenameDialogState>({\n    isOpen: false,\n    pageId: \"\",\n    currentName: \"\",\n  })\n  const [newPageName, setNewPageName] = useState(\"\")\n\n  const handleSelectPage = useCallback(\n    (id: string) => {\n      console.log(\"🎯 Page selected:\", { pageId: id })\n      callbacks.onPageSelect(id)\n    },\n    [callbacks],\n  )\n\n  const handleRenamePage = useCallback((id: string, currentName: string) => {\n    setRenameDialog({ isOpen: true, pageId: id, currentName })\n    setNewPageName(currentName)\n  }, [])\n\n  const handleConfirmRename = useCallback(() => {\n    if (newPageName.trim() && renameDialog.pageId) {\n      console.log(\"✏️ Page renamed:\", {\n        pageId: renameDialog.pageId,\n        oldName: renameDialog.currentName,\n        newName: newPageName.trim(),\n      })\n      callbacks.onPageRename(renameDialog.pageId, newPageName.trim())\n    }\n    setRenameDialog({ isOpen: false, pageId: \"\", currentName: \"\" })\n    setNewPageName(\"\")\n  }, [newPageName, renameDialog, callbacks])\n\n  const handleCancelRename = useCallback(() => {\n    setRenameDialog({ isOpen: false, pageId: \"\", currentName: \"\" })\n    setNewPageName(\"\")\n  }, [])\n\n  const handleDeletePage = useCallback(\n    (id: string) => {\n      console.log(\"🗑️ Page deleted:\", { pageId: id })\n      callbacks.onPageDelete(id)\n    },\n    [callbacks],\n  )\n\n  const handleDuplicatePage = useCallback(\n    (id: string) => {\n      console.log(\"📋 Page duplicated:\", { pageId: id })\n      callbacks.onPageDuplicate(id)\n    },\n    [callbacks],\n  )\n\n  const handleAddPage = useCallback(\n    (afterId?: string) => {\n      console.log(\"➕ Page added:\", { afterPageId: afterId || \"end\" })\n      callbacks.onPageAdd(afterId)\n    },\n    [callbacks],\n  )\n\n  const handleReorderPages = useCallback(\n    (activeId: string, overId: string) => {\n      console.log(\"🔄 Pages reordered:\", { activeId, overId })\n      callbacks.onPageReorder(activeId, overId)\n    },\n    [callbacks],\n  )\n\n  return {\n    activeId,\n    setActiveId,\n    renameDialog,\n    newPageName,\n    setNewPageName,\n    handleSelectPage,\n    handleRenamePage,\n    handleConfirmRename,\n    handleCancelRename,\n    handleDeletePage,\n    handleDuplicatePage,\n    handleAddPage,\n    handleReorderPages,\n  }\n}\n"],"mappings":"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","names":["React","import_react","import_core","import_sortable","import_lucide_react","import_ui","React","import_lucide_react","import_ui","React","import_ui","React","DndDragOverlay","activeId"]}